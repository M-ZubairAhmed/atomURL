{"version":3,"sources":["App.js","index.js"],"names":["checkURLValidity","inputURL","urlRegex","RegExp","match","App","state","longURLErrors","longURL","shortURLErrors","shortURL","isWorking","isCompleted","body","JSON","stringify","destinationURL","trim","this","setState","fetch","headers","Content-Type","method","mode","request","status","console","error","_context","t0","e","preventDefault","length","test","slice","checkAndShortURL","_this$setState","validation","_e$target","target","name","value","Object","defineProperty","_this2","react_default","a","createElement","className","type","concat","aria-label","aria-describedby","onChange","handleFormChange","autoFocus","required","placeholder","disabled","id","Fragment","class","lib","text","onClick","startNew","generateURL","role","aria-hidden","React","Component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.46fddf5b.chunk.js","sourcesContent":["import React from 'react'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nconst checkURLValidity = (inputURL) => {\n  var validURLExpression = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi\n  var urlRegex = new RegExp(validURLExpression)\n  return !inputURL.match(urlRegex)\n}\n\nconst checkShortURLValidity = (inputURL) => {\n  var urlRegex = new RegExp('^[a-z-]+$')\n  return !urlRegex.test(inputURL)\n}\n\nexport default class App extends React.Component {\n  state = {\n    longURLErrors: '',\n    longURL: '',\n    shortURLErrors: '',\n    shortURL: '',\n    isWorking: false,\n    isCompleted: false,\n  }\n\n  async checkAndShortURL(longURL, shortURL) {\n    const body = JSON.stringify({\n      destinationURL: longURL.trim(),\n      shortURL: shortURL.trim(),\n    })\n\n    await this.setState({\n      isWorking: true,\n    })\n\n    try {\n      const request = await fetch('/api/add', {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        method: 'POST',\n        mode: 'cors',\n        body,\n      })\n      const status = await request.status\n      if (status === 201) {\n        await this.setState({\n          isWorking: false,\n          isCompleted: true,\n        })\n      } else {\n        await this.setState({\n          isWorking: false,\n          isCompleted: false,\n        })\n      }\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  async generateURL(e) {\n    e.preventDefault()\n\n    const { longURL, shortURL } = this.state\n\n    let longURLErrors = ''\n    let shortURLErrors = ''\n\n    if (checkURLValidity(longURL)) {\n      longURLErrors = 'URL should be of format <http>://domain.<tld>'\n    }\n    if (shortURL.length === 0) {\n      shortURLErrors = 'This cannot be empty'\n    } else if (checkShortURLValidity(shortURL)) {\n      shortURLErrors =\n        'Shortened url can only contain small letters and hyphens ( - )'\n    } else if (\n      shortURL.trim().slice(0, 1) === '-' ||\n      shortURL.trim().slice(-1) === '-'\n    ) {\n      shortURLErrors = 'It cannot start or end with hyphen ( - )'\n    }\n\n    // Settings state for errors\n    if (longURLErrors || shortURLErrors) {\n      this.setState({\n        longURLErrors,\n        shortURLErrors,\n      })\n    } else {\n      // Frontend no errors\n      this.checkAndShortURL(longURL, shortURL)\n    }\n  }\n\n  startNew(e) {\n    e.preventDefault()\n    this.setState({\n      isWorking: false,\n      isCompleted: false,\n      longURL: '',\n      shortURL: '',\n      longURLErrors: '',\n      shortURLErrors: '',\n    })\n  }\n\n  handleFormChange(e) {\n    let validation = ''\n    const {\n      target: { name, value },\n    } = e\n\n    if (name === 'longURL') {\n      validation = 'longURLErrors'\n    } else if (name === 'shortURL') {\n      validation = 'shortURLErrors'\n    }\n\n    this.setState({\n      [name]: value,\n      [validation]: '',\n    })\n  }\n\n  render() {\n    return (\n      <main>\n        <header className=\"App-header\">AtomURL</header>\n        <div className=\"container main-section\">\n          <div className=\"box-card shadow-lg rounded bg-white p-5\">\n            <form>\n              <div className=\"input-group mb-3 input-group-lg\">\n                <input\n                  name=\"longURL\"\n                  type=\"url\"\n                  className={`form-control ${\n                    this.state.longURLErrors === '' ? '' : 'is-invalid'\n                  } ${this.state.isCompleted ? 'form-control-plaintext' : ''}`}\n                  aria-label=\"Sizing example input\"\n                  aria-describedby=\"inputGroup-sizing-default\"\n                  onChange={(e) => this.handleFormChange(e)}\n                  autoFocus={true}\n                  required={true}\n                  placeholder=\"Destination URL\"\n                  disabled={this.state.isWorking || this.state.isCompleted}\n                  value={this.state.longURL}\n                />\n                <div className=\"invalid-feedback\">\n                  {this.state.longURLErrors}\n                </div>\n              </div>\n              <div className=\"text-center\">\n                <i className=\"fas fa-arrow-down h3 my-2\" />\n              </div>\n              <div className=\"input-group input-group-lg mt-3 mb-5\">\n                {!this.state.isCompleted && (\n                  <div className=\"input-group-prepend\">\n                    <span\n                      className=\"input-group-text\"\n                      id=\"inputGroup-sizing-lg\">\n                      atomurl.ga/go/\n                    </span>\n                  </div>\n                )}\n                {this.state.isCompleted ? (\n                  <>\n                    <input\n                      id=\"shortURLFinal\"\n                      type=\"text\"\n                      name=\"shortURL\"\n                      className={`form-control form-control-plaintext`}\n                      aria-label=\"Sizing example input\"\n                      aria-describedby=\"inputGroup-sizing-lg\"\n                      value={`atomurl.ga/go/${this.state.shortURL}`}\n                      required\n                      disabled\n                    />\n                    <div class=\"input-group-append\">\n                      <CopyToClipboard\n                        text={`atomurl.ga/go/${this.state.shortURL}`}>\n                        <button\n                          class=\"btn btn-info\"\n                          type=\"button\"\n                          id=\"button-addon2\">\n                          <i class=\"far fa-copy\" />\n                        </button>\n                      </CopyToClipboard>\n                    </div>\n                  </>\n                ) : (\n                  <>\n                    <input\n                      type=\"text\"\n                      name=\"shortURL\"\n                      className={`form-control ${\n                        this.state.shortURLErrors === '' ? '' : 'is-invalid'\n                      }`}\n                      aria-label=\"Sizing example input\"\n                      aria-describedby=\"inputGroup-sizing-lg\"\n                      onChange={(e) => this.handleFormChange(e)}\n                      value={this.state.shortURL}\n                      required\n                      placeholder=\"Short URL\"\n                      disabled={this.state.isWorking}\n                    />\n                    <div className=\"invalid-feedback\">\n                      {this.state.shortURLErrors}\n                    </div>\n                  </>\n                )}\n              </div>\n              <div className=\"text-center\">\n                {this.state.isCompleted ? (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-outline-info btn-lg mr-3\"\n                    onClick={(e) => this.startNew(e)}>\n                    Successfully created, Add more ?\n                  </button>\n                ) : (\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-info btn-lg\"\n                    onClick={(e) => this.generateURL(e)}\n                    disabled={this.state.isWorking}>\n                    <div className=\"d-flex\">\n                      {this.state.isWorking\n                        ? 'Checking and adding URL'\n                        : 'Assign the above URL'}\n                      <span\n                        class={`spinner-grow spinner-grow-md ml-3 fade animate-all ${\n                          this.state.isWorking ? '' : 'd-none'\n                        }`}\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                      />\n                    </div>\n                  </button>\n                )}\n              </div>\n            </form>\n          </div>\n        </div>\n      </main>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}